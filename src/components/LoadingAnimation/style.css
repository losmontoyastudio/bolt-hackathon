@import url('https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@200&display=swap');

/* Disable scrolling when loading animation is active */
.no-scroll {
  overflow: hidden !important;
  height: 100% !important;
  position: fixed !important;
  width: 100% !important;
  /* Prevent layout shift when scroll is restored */
  padding-right: var(--scrollbar-width, 0px) !important;
  /* Add transition for smooth restoration */
  transition: padding-right 0.1s ease;
}

/* Calculate scrollbar width on page load to prevent layout shifts */
:root {
  --scrollbar-width: 0px;
}

.loading-animation {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: var(--bgprimary);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 9999;
  /* Only transition the necessary properties */
  transition: opacity 0.3s ease-out, background-color var(--transition-speed) ease;
  /* Add containment for improved performance */
  contain: content;
}

.animation-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 300px;
  max-width: 90vw;
  /* Add containment to limit repaints */
  contain: layout style;
}

.shape-container {
  height: 60px;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: 20px;
  /* Add containment for animations */
  contain: layout;
}

.loading-text {
  font-family: 'JetBrains Mono', monospace;
  font-weight: 200; /* ExtraLight */
  font-size: 10px;
  line-height: 133%;
  letter-spacing: 0%;
  color: var(--typebody);
  text-align: center;
  min-height: 15px;
  margin-bottom: 40px;
  /* Only transition color */
  transition: color var(--transition-speed) ease;
}

.cursor {
  display: inline-block;
  animation: blink 0.7s step-end infinite;
}

.fade-out {
  opacity: 0;
  pointer-events: none;
}

/* Progress bar styles */
.progress-container {
  width: 100%;
  height: 1px;
  background-color: var(--bgsecondary);
  overflow: hidden;
  /* Only transition background-color */
  transition: background-color var(--transition-speed) ease;
}

.progress-bar {
  height: 100%;
  background-color: var(--typeinterface);
  width: 0;
  /* Only transition necessary properties */
  transition: width 0.3s ease-out, background-color var(--transition-speed) ease;
  will-change: width, background-color;
}

/* Shape styles */
.shape {
  width: 20px;
  height: 20px;
  border: 1px solid var(--typeinterface);
  background-color: transparent;
  animation: fadeIn 0.5s ease forwards;
  opacity: 0;
  transform: scale(0.8);
  position: relative;
  transition: border-color var(--transition-speed) ease;
}

.triangle {
  width: 0;
  height: 0;
  background-color: transparent;
  border: none;
  position: relative;
}

.triangle:before {
  content: '';
  position: absolute;
  width: 20px;
  height: 20px;
  background-color: transparent;
  top: -10px;
  left: -10px;
  clip-path: polygon(50% 0%, 0% 100%, 100% 100%);
  background: var(--typeinterface);
  opacity: 1;
  /* Only transition background color */
  transition: background-color var(--transition-speed) ease;
  will-change: background-color;
}

.bolt {
  width: 0;
  height: 0;
  background-color: transparent;
  border: none;
  position: relative;
}

.bolt:before {
  content: '';
  position: absolute;
  width: 12px;
  height: 20px;
  background-color: transparent;
  top: -10px;
  left: -6px;
  clip-path: polygon(50% 0%, 0% 50%, 40% 50%, 0% 100%, 100% 40%, 60% 40%, 100% 0%);
  background: var(--typeinterface);
  opacity: 1;
  transition: background-color var(--transition-speed) ease;
  will-change: background-color;
}

.square {
  transform: scale(0.8);
}

.rectangle {
  transform: scale(0.8);
  width: 28px;
  height: 16px;
}

.circle {
  border-radius: 50%;
  transform: scale(0.8);
}

.diamond {
  transform: rotate(45deg) scale(0.8);
}

.hexagon {
  width: 20px;
  height: 20px;
  background-color: transparent;
  position: relative;
  border: 1px solid var(--typeinterface);
  transform: rotate(45deg) scale(0.8);
}

.hexagon:before,
.hexagon:after {
  display: none;
}

/* Converged shapes styling */
.shapes-converged {
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  height: 20px;
  gap: 16px;
  width: auto;
}

.shapes-converged .shape {
  position: relative;
  opacity: 0;
  margin: 0;
  animation: fadeInShape 0.8s ease forwards;
  display: inline-block;
  vertical-align: middle;
  transform-origin: center;
}

/* Ensure proper vertical alignment for each shape in converged state */
.shapes-converged .triangle {
  animation-delay: 0s;
  width: 0;
  height: 0;
  border: none;
  position: relative;
  display: inline-block;
  vertical-align: middle;
}

.shapes-converged .bolt {
  animation-delay: 0s;
  width: 0;
  height: 0;
  border: none;
  position: relative;
  display: inline-block;
  vertical-align: middle;
}

.shapes-converged .bolt:before {
  content: '';
  position: absolute;
  width: 10px;
  height: 16px;
  background-color: transparent;
  top: -8px;
  left: -5px;
  clip-path: polygon(50% 0%, 0% 50%, 40% 50%, 0% 100%, 100% 40%, 60% 40%, 100% 0%);
  background: var(--typeinterface);
  opacity: 1;
  transition: background-color var(--transition-speed) ease;
}

.shapes-converged .triangle:before {
  content: '';
  position: absolute;
  width: 16px;
  height: 16px;
  background-color: transparent;
  top: -8px;
  left: -8px;
  clip-path: polygon(50% 0%, 0% 100%, 100% 100%);
  background: var(--typeinterface);
  opacity: 1;
}

.shapes-converged .square {
  animation-delay: 0.1s;
  transform: rotate(45deg);
  width: 14px;
  height: 14px;
}

.shapes-converged .rectangle {
  animation-delay: 0.1s;
  width: 20px;
  height: 12px;
}

.shapes-converged .circle {
  animation-delay: 0.2s;
  width: 16px;
  height: 16px;
}

.shapes-converged .diamond {
  animation-delay: 0.3s;
  transform: rotate(45deg);
  width: 14px;
  height: 14px;
}

.shapes-converged .hexagon {
  animation-delay: 0.4s;
  margin: 0;
  width: 14px;
  height: 14px;
  transform: rotate(45deg);
  border: 1px solid var(--typeinterface);
}

.shapes-converged .hexagon:before,
.shapes-converged .hexagon:after {
  display: none;
}

@keyframes fadeIn {
  to {
    opacity: 0.8;
    transform: scale(1);
  }
}

@keyframes fadeInShape {
  0% {
    opacity: 0;
    transform: translateY(5px);
  }
  100% {
    opacity: 0.8;
    transform: translateY(0);
  }
}

@keyframes blink {
  from, to {
    opacity: 1;
  }
  50% {
    opacity: 0;
  }
}

/* Media queries for responsive design */
@media (max-width: 480px) {
  .shape-container {
    height: 50px;
    margin-bottom: 15px;
  }
  
  .loading-text {
    margin-bottom: 30px;
  }
}

/* Specific adjustments for the shapes in converged state */
.shapes-converged .square,
.shapes-converged .diamond {
  display: inline-flex;
  align-items: center;
  justify-content: center;
}

/* Special styling for dark mode to ensure visibility */
[data-theme="dark"] .animation-container {
  opacity: 0.95; /* Slight transparency for visual appeal */
}

[data-theme="dark"] .shape {
  border-width: 1.5px; /* Slightly thicker border for better visibility */
}

[data-theme="dark"] .progress-container {
  background-color: rgba(45, 45, 45, 0.8); /* Slightly different background for progress bar */
}

/* TRON theme specific styles */
[data-theme="tron"] .loading-animation {
  background-color: var(--bgprimary);
}

[data-theme="tron"] .loading-text {
  color: var(--typesecondary);
  text-shadow: 0 0 5px rgba(125, 253, 254, 0.5),
               0 0 10px rgba(125, 253, 254, 0.3);
}

[data-theme="tron"] .shape {
  border-color: var(--typeinterface);
  box-shadow: 0 0 5px rgba(125, 253, 254, 0.3),
              0 0 10px rgba(125, 253, 254, 0.2);
}

[data-theme="tron"] .progress-bar {
  background-color: rgba(125, 253, 254, 0.1);
}

[data-theme="tron"] .progress-fill {
  background-color: var(--typeinterface);
  box-shadow: 0 0 5px rgba(125, 253, 254, 0.3),
              0 0 10px rgba(125, 253, 254, 0.2);
}

[data-theme="tron"] .shapes-converged .shape {
  border-color: var(--typequinary);
  box-shadow: 0 0 8px rgba(255, 144, 0, 0.4),
              0 0 16px rgba(255, 144, 0, 0.2);
}

/* Respect user's motion preferences */
@media (prefers-reduced-motion: reduce) {
  .loading-animation {
    transition: none !important;
  }
  
  .loading-animation .progress-bar {
    transition: width 0.1s linear !important;
  }
  
  .loading-animation .cursor {
    animation: none !important;
  }
  
  .shape {
    animation: none !important;
    transform: scale(1) !important;
  }
  
  .shapes-converged .shape {
    animation: none !important;
    opacity: 0.8;
  }
} 